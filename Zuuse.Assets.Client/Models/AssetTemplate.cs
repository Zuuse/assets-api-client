// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Zuuse.Assets.Client.Models
{
    /// <summary> The AssetTemplate. </summary>
    public partial class AssetTemplate
    {
        /// <summary> Initializes a new instance of AssetTemplate. </summary>
        public AssetTemplate()
        {
            Locations = new ChangeTrackingList<AssetTaxonomyInfo>();
            Functions = new ChangeTrackingList<AssetTaxonomyInfo>();
            Attributes = new ChangeTrackingList<AssetAttributeInfo>();
            Measures = new ChangeTrackingList<AssetMeasureInfo>();
        }

        /// <summary> Initializes a new instance of AssetTemplate. </summary>
        /// <param name="id"> . </param>
        /// <param name="maximumLevels"> . </param>
        /// <param name="locations"> . </param>
        /// <param name="functions"> . </param>
        /// <param name="attributes"> . </param>
        /// <param name="measures"> . </param>
        /// <param name="versionDate"> . </param>
        /// <param name="versionBy"> . </param>
        /// <param name="createdDate"> . </param>
        /// <param name="createdBy"> . </param>
        /// <param name="isActive"> . </param>
        internal AssetTemplate(string id, int? maximumLevels, IList<AssetTaxonomyInfo> locations, IList<AssetTaxonomyInfo> functions, IList<AssetAttributeInfo> attributes, IList<AssetMeasureInfo> measures, DateTimeOffset? versionDate, string versionBy, DateTimeOffset? createdDate, string createdBy, bool? isActive)
        {
            Id = id;
            MaximumLevels = maximumLevels;
            Locations = locations;
            Functions = functions;
            Attributes = attributes;
            Measures = measures;
            VersionDate = versionDate;
            VersionBy = versionBy;
            CreatedDate = createdDate;
            CreatedBy = createdBy;
            IsActive = isActive;
        }

        public string Id { get; set; }
        public int? MaximumLevels { get; set; }
        public IList<AssetTaxonomyInfo> Locations { get; }
        public IList<AssetTaxonomyInfo> Functions { get; }
        public IList<AssetAttributeInfo> Attributes { get; }
        public IList<AssetMeasureInfo> Measures { get; }
        public DateTimeOffset? VersionDate { get; set; }
        public string VersionBy { get; set; }
        public DateTimeOffset? CreatedDate { get; set; }
        public string CreatedBy { get; set; }
        public bool? IsActive { get; set; }
    }
}
