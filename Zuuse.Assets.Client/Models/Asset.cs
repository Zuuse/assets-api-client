// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Zuuse.Assets.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class Asset
    {
        /// <summary>
        /// Initializes a new instance of the Asset class.
        /// </summary>
        public Asset()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Asset class.
        /// </summary>
        public Asset(string name, string id = default(string), AssetReference locationParent = default(AssetReference), AssetReference functionParent = default(AssetReference), IList<AssetReference> children = default(IList<AssetReference>), string functionalLayer0 = default(string), string functionalLayer1 = default(string), string functionalLayer2 = default(string), string functionalLayer3 = default(string), string functionalLayer4 = default(string), string functionalLayer5 = default(string), string functionalLayer6 = default(string), string functionalLayer7 = default(string), string functionalLayer8 = default(string), string functionalLayer9 = default(string), string functionalId = default(string), string locationLayer0 = default(string), string locationLayer1 = default(string), string locationLayer2 = default(string), string locationLayer3 = default(string), string locationLayer4 = default(string), string locationLayer5 = default(string), string locationLayer6 = default(string), string locationLayer7 = default(string), string locationLayer8 = default(string), string locationLayer9 = default(string), string locationId = default(string), string attribute0 = default(string), string attribute1 = default(string), string attribute2 = default(string), string attribute3 = default(string), string attribute4 = default(string), string attribute5 = default(string), string attribute6 = default(string), string attribute7 = default(string), string attribute8 = default(string), string attribute9 = default(string), double? measure0 = default(double?), double? measure1 = default(double?), double? measure2 = default(double?), double? measure3 = default(double?), double? measure4 = default(double?), double? measure5 = default(double?), double? measure6 = default(double?), double? measure7 = default(double?), double? measure8 = default(double?), double? measure9 = default(double?), bool? isPhysical = default(bool?), bool? inheritedIsActive = default(bool?), int? layerIndex = default(int?), string projectId = default(string), string externalId = default(string), string modelHash = default(string), string keyWords = default(string), double? latitude = default(double?), double? longitude = default(double?), bool? isActive = default(bool?), string thumbnailRemoteFile = default(string), string previewRemoteFile = default(string), string summaryReference = default(string), System.DateTime? versionDate = default(System.DateTime?), string versionBy = default(string), System.DateTime? createdDate = default(System.DateTime?), string createdBy = default(string), IList<string> geometryReferences = default(IList<string>))
        {
            Id = id;
            Name = name;
            LocationParent = locationParent;
            FunctionParent = functionParent;
            Children = children;
            FunctionalLayer0 = functionalLayer0;
            FunctionalLayer1 = functionalLayer1;
            FunctionalLayer2 = functionalLayer2;
            FunctionalLayer3 = functionalLayer3;
            FunctionalLayer4 = functionalLayer4;
            FunctionalLayer5 = functionalLayer5;
            FunctionalLayer6 = functionalLayer6;
            FunctionalLayer7 = functionalLayer7;
            FunctionalLayer8 = functionalLayer8;
            FunctionalLayer9 = functionalLayer9;
            FunctionalId = functionalId;
            LocationLayer0 = locationLayer0;
            LocationLayer1 = locationLayer1;
            LocationLayer2 = locationLayer2;
            LocationLayer3 = locationLayer3;
            LocationLayer4 = locationLayer4;
            LocationLayer5 = locationLayer5;
            LocationLayer6 = locationLayer6;
            LocationLayer7 = locationLayer7;
            LocationLayer8 = locationLayer8;
            LocationLayer9 = locationLayer9;
            LocationId = locationId;
            Attribute0 = attribute0;
            Attribute1 = attribute1;
            Attribute2 = attribute2;
            Attribute3 = attribute3;
            Attribute4 = attribute4;
            Attribute5 = attribute5;
            Attribute6 = attribute6;
            Attribute7 = attribute7;
            Attribute8 = attribute8;
            Attribute9 = attribute9;
            Measure0 = measure0;
            Measure1 = measure1;
            Measure2 = measure2;
            Measure3 = measure3;
            Measure4 = measure4;
            Measure5 = measure5;
            Measure6 = measure6;
            Measure7 = measure7;
            Measure8 = measure8;
            Measure9 = measure9;
            IsPhysical = isPhysical;
            InheritedIsActive = inheritedIsActive;
            LayerIndex = layerIndex;
            ProjectId = projectId;
            ExternalId = externalId;
            ModelHash = modelHash;
            KeyWords = keyWords;
            Latitude = latitude;
            Longitude = longitude;
            IsActive = isActive;
            ThumbnailRemoteFile = thumbnailRemoteFile;
            PreviewRemoteFile = previewRemoteFile;
            SummaryReference = summaryReference;
            VersionDate = versionDate;
            VersionBy = versionBy;
            CreatedDate = createdDate;
            CreatedBy = createdBy;
            GeometryReferences = geometryReferences;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LocationParent")]
        public AssetReference LocationParent { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FunctionParent")]
        public AssetReference FunctionParent { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Children")]
        public IList<AssetReference> Children { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FunctionalLayer0")]
        public string FunctionalLayer0 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FunctionalLayer1")]
        public string FunctionalLayer1 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FunctionalLayer2")]
        public string FunctionalLayer2 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FunctionalLayer3")]
        public string FunctionalLayer3 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FunctionalLayer4")]
        public string FunctionalLayer4 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FunctionalLayer5")]
        public string FunctionalLayer5 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FunctionalLayer6")]
        public string FunctionalLayer6 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FunctionalLayer7")]
        public string FunctionalLayer7 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FunctionalLayer8")]
        public string FunctionalLayer8 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FunctionalLayer9")]
        public string FunctionalLayer9 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FunctionalId")]
        public string FunctionalId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LocationLayer0")]
        public string LocationLayer0 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LocationLayer1")]
        public string LocationLayer1 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LocationLayer2")]
        public string LocationLayer2 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LocationLayer3")]
        public string LocationLayer3 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LocationLayer4")]
        public string LocationLayer4 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LocationLayer5")]
        public string LocationLayer5 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LocationLayer6")]
        public string LocationLayer6 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LocationLayer7")]
        public string LocationLayer7 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LocationLayer8")]
        public string LocationLayer8 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LocationLayer9")]
        public string LocationLayer9 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LocationId")]
        public string LocationId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Attribute0")]
        public string Attribute0 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Attribute1")]
        public string Attribute1 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Attribute2")]
        public string Attribute2 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Attribute3")]
        public string Attribute3 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Attribute4")]
        public string Attribute4 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Attribute5")]
        public string Attribute5 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Attribute6")]
        public string Attribute6 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Attribute7")]
        public string Attribute7 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Attribute8")]
        public string Attribute8 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Attribute9")]
        public string Attribute9 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Measure0")]
        public double? Measure0 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Measure1")]
        public double? Measure1 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Measure2")]
        public double? Measure2 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Measure3")]
        public double? Measure3 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Measure4")]
        public double? Measure4 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Measure5")]
        public double? Measure5 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Measure6")]
        public double? Measure6 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Measure7")]
        public double? Measure7 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Measure8")]
        public double? Measure8 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Measure9")]
        public double? Measure9 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsPhysical")]
        public bool? IsPhysical { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "InheritedIsActive")]
        public bool? InheritedIsActive { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LayerIndex")]
        public int? LayerIndex { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ProjectId")]
        public string ProjectId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ExternalId")]
        public string ExternalId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ModelHash")]
        public string ModelHash { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "KeyWords")]
        public string KeyWords { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Latitude")]
        public double? Latitude { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Longitude")]
        public double? Longitude { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsActive")]
        public bool? IsActive { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ThumbnailRemoteFile")]
        public string ThumbnailRemoteFile { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PreviewRemoteFile")]
        public string PreviewRemoteFile { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SummaryReference")]
        public string SummaryReference { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VersionDate")]
        public System.DateTime? VersionDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VersionBy")]
        public string VersionBy { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CreatedDate")]
        public System.DateTime? CreatedDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CreatedBy")]
        public string CreatedBy { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "GeometryReferences")]
        public IList<string> GeometryReferences { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
        }
    }
}
